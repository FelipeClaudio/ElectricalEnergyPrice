#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Feb  6 06:22:20 2019

@author: felipe
"""

import trendAnalysis as tr
import pandas as pd
import numpy as np


def GetPeriodicMovingAveragePrediction (y, T):
    ySize = y.size
    mask = np.zeros(ySize)
    pred = np.zeros(ySize)
    for i in range (0, ySize):
        mask = np.roll(mask, 1)
        if i % T == 0:
            mask[0] = 1
        else:
            mask[0] = 0
        
        idx = np.nonzero(mask)
        vecIdx = y.iloc[idx]
        
        if (i / T) <= 2:
            pred[i] = y[i]
        else:
            fit = np.polyfit(np.arange(0, vecIdx.size - 1), vecIdx[:-1], 1)
            fit_fn = np.poly1d(fit)
            pred[i] = fit_fn(i // T)
            
    return pred


    


def GetPeriodicMovingAveragePredictionWithWindow (y, T, windowSize = 2):
    ySize = y.size
    mask = np.zeros(ySize)
    pred = np.zeros(ySize)
    for i in range (0, ySize):
        mask = np.roll(mask, 1)
        if i % T == 0:
            mask[0] = 1
        else:
            mask[0] = 0
        
        idx = np.nonzero(mask)
        vecIdx = y.iloc[idx]
        
        if (i / T) <= 2:
            pred[i] = y[i]
        else:
            vIdxSize = vecIdx.size
            fit = np.polyfit(np.arange(0, windowSize), vecIdx[(vIdxSize - 1 -windowSize):-1], 1)
            fit_fn = np.poly1d(fit)
            pred[i] = fit_fn(vIdxSize  - 1 -windowSize)
            
    return pred

T = 3
vetorTeste = np.arange(10) + 1
vetorTeste = np.append(vetorTeste, [8.5, 6.4, 5.3, 8.7, 4.9])
pandasSeries = pd.Series(vetorTeste)
resp = GetPeriodicMovingAveragePrediction(pandasSeries, 3)
